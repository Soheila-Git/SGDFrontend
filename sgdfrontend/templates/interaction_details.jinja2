<!DOCTYPE html>

<title>{{display_name}} Interactions</title>

{% extends "templates/global_layout.jinja2" %}


{% block body %}

<div id="center_title" class="row">
	<h2><span class="gene_name">{{display_name}}/{{format_name}}</span> Physical and Genetic Interactions  <a href="http://www.yeastgenome.org/help/interaction.html" name="top" class="help"><img src="http://www.yeastgenome.org/images/icon_help_circle_dark.png" alt="Help"></a></h2>
</div>


<!-- Includes tabs.html into template -->
{% include "templates/tabs.jinja2" %}

<script>
	var int_tab = document.getElementById('interaction_tab');
	int_tab.id = 'current';
</script>

<!-- Docs nav
================================================== -->
<div class="row">
	<nav id="sidebar" class="small-3 columns">
		<ul data-magellan-expedition="fixed" class="side-nav" id="side-nav-sticky">
			<li id="nav-title"><h5><a href="{{link}}">{{display_name}}/{{format_name}}</a> Interactions</h5></li>
          	<li data-magellan-arrival="summary"><a href="#summary">Interactors Summary</a></li>
			<li data-magellan-arrival="interactions"><a href="#interactions">Interactions</a></li>
			<li data-magellan-arrival="network"><a href="#network">Network Visualization</a></li>
			<li data-magellan-arrival="resources"><a href="#resources">Resources</a></li>
		</ul>
	</nav>
	
	<div class="small-9 columns">  
		
<!-- Summary
================================================== -->
<section id="summary" data-magellan-destination="summary">
	<div class="page-header">
		<p>This page lists all genes/proteins that interact with {{display_name}}. See help for information about interaction data.</p>
		<h1>Interactors Summary</h1>
		<div id="venn_diagram"></div>
	
		<div class="button-bar">
			<h5>Analyze</h5>
			<ul class="button-group radius">
				<li><a class="small button secondary" onclick="analyze_phys()">Physical</a></li>
				<li><a class="small button secondary" onclick="analyze_gen()">Genetic</a></li>
				<li><a class="small button secondary" onclick="analyze_phys_and_gen()">Intersection</a></li>
				<li><a class="small button secondary" onclick="analyze_phys_or_gen()">All</a></li>
			</ul>
			<ul class="button-group radius">
				<li><a href="" class="small button secondary radius" id="save"><i class="icon-picture"></i> PNG</a></li>
			</ul>
		</div>
	</div>
</section>

<!-- Interactions
================================================== -->
<section id="interactions" data-magellan-destination="interactions">
	<div class="page-header">
		<h1>Interactions <span id='evidence_header'></h1>
		<span>Source: <a href="http://thebiogrid.org/" target="_blank">BioGRID</a></span>
		
		<span id='evidence_message'></span>
		<div id='evidence_wrapper'>
			<table class='table table-striped table-bordered table-condensed tablesorter' id='evidence_table' width="100%">
			<thead>
  			<tr>
  				<th></th>
  				<th>Interactor</th>
  				<th>Interactor</th>
  				<th>Type</th>
    			<th>Assay</th>
    			<th>Annotation</th>
    			<th>Action</th>
    			<th>Modification</th>
    			<th>Phenotype</th>
    			<th>Source</th>
    			<th>Reference</th>
    			<th>Note</th>
  			</tr>
  			</thead>
			</table>
        </div>
   </div>
</section>

<!-- Network Visualization
================================================== -->
<section id="network" data-magellan-destination="network">
	<div class="page-header">
		<h1>Network Visualization</h1>
		<input id="all_radio" type="radio" name="group1" onclick="change_scale(); filter_cy()" checked> All<br>
		<input id="physical_radio" type="radio" name="group1" onclick="change_scale(); filter_cy()"> Physical<br>
		<input id="genetic_radio" type="radio" name="group1" onclick="change_scale(); filter_cy()"> Genetic<br>
		<input id="both_radio" type="radio" name="group1" onclick="change_scale(); filter_cy()"> Both Physical and Genetic<br>
		<br> 
		<div id="cy" name="cy" style="width:100%;height:700px"></div>
		<br>
		<strong>Filter Interactions by # of Experiments:</strong><br><br>
		<div id='allSlider' class='noUiSlider' style="width:100%"></div>
		<div id='physSlider' class='noUiSlider' style="width:100%"></div>
		<div id='genSlider' class='noUiSlider' style="width:100%"></div>
		<div id='bothSlider' class='noUiSlider' style="width:100%"></div>
		<br>
		<br>
        <span>Export:</span>
        <ul class="button-group radius">
        	<li><a class="small button secondary" onclick="vis.exportNetwork('png', '/download_graph/png')">png</a></li>
        	<li><a class="small button secondary" onclick="vis.exportNetwork('svg', '/download_graph/svg')">svg</a></li>
        	<li><a class="small button secondary" onclick="vis.exportNetwork('pdf', '/download_graph/pdf')">pdf</a></li>
        	<li><a class="small button secondary" onclick="vis.exportNetwork('xgmml', '/download_graph/xml')">xgmml</a></li>
        	<li><a class="small button secondary" onclick="vis.exportNetwork('graphml', '/download_graph/txt')">graphml</a></li>
        	<li><a class="small button secondary" onclick="vis.exportNetwork('sif', '/download_graph/txt', options={nodeAttr:'label', interactionAttr:'label'})">txt</a></li>
        </ul>
    </div>
</section>

<!-- Resources
================================================== -->
<section id="resources" data-magellan-destination="resources">
	<div class="page-header">
		<h1>Resources</h1>
		<ul id='resource_list'>
		</ul>
	</div>
</section>
<br>
<br>
<br>
<br>
<br>
<br>
</div>
</div>

<script src="jquery.nouislider.min.js"></script>
<link href="nouislider.fox.css" rel="stylesheet">

<script>
  	
  	function get_details(row) {
  		var details = row[11];
  		if(details != null) {
  			return '<strong>Note:</strong> ' + details + '<br>';
  	    }
  	    else {
  	    	return null;
  	    }
  	}
  	
  	function set_up_evidence_table(data) { 
  		var datatable = [];
  		for (var i=0; i < data.length; i++) {
  			var evidence = data[i];
  			
  			var bioent1 = create_link(evidence['bioent1']['display_name'], evidence['bioent1']['link'])
			var bioent2 = create_link(evidence['bioent2']['display_name'], evidence['bioent2']['link'])
			
			var experiment = '';
			if(evidence['experiment'] != null) {
  				//experiment = create_link(evidence['experiment']['display_name'], evidence['experiment']['link']);
  				experiment = evidence['experiment']['display_name'];
  			}
  			var phenotype = '';
  			if(evidence['phenotype'] != null) {
  				//phenotype = create_link(evidence['phenotype']['display_name'], evidence['phenotype']['link']);
  				phenotype = evidence['phenotype']['display_name'];
  			}
  			var modification = '';
  			if(evidence['modification'] != null) {
  				modification = evidence['modification'];
  			}
  			var reference = create_link(evidence['reference']['display_name'], evidence['reference']['link']);;
  			datatable.push([null, bioent1, bioent2, evidence['interaction_type'], experiment, evidence['annotation_type'], evidence['direction'], modification, phenotype, evidence['source'], reference, evidence['note']])
  		}
  		 		
  		//Insert a 'details' column to the table  		
  		add_detail_column('genetic_evidence_table');
         
		//Set up genetic evidence table
		var options = {};
		options["bPaginate"] = true;
        options["oTableTools"] = table_tool_option('{{interaction_evidence_filename}}', true, '{{analyze_link}}', '{{all_listname}}', 0, 2);
		options["sDom"] = '<"clear">lfrtipT';
		options["aaSorting"] = [[2, "asc"]];
        options["fnInitComplete"] = set_up_message_and_count("evidence_header", "evidence_message", "evidence_wrapper");
		options["fnDrawCallback"] = set_up_details(get_details);
		options["aoColumns"] = [{"bSortable":false}, {"bSearchable":false, "bVisible":false}, null, null, null, null, null, null, null, {"bSearchable":false, "bVisible":false}, null, {"bSearchable":false, "bVisible":false}]		
		options["aaData"] = datatable;
  				
  		var ev_table = $('#evidence_table').dataTable(options);
  		ev_table.on('filter', function(){
  			var visible_rows = genetic_table._('tr', {"filter": "applied"}).length;
  			if(visible_rows == 0) {
  				document.getElementById("ToolTables_evidence_table_0").className += " disabled";
  				document.getElementById("ToolTables_evidence_table_1").className += " disabled";
  				document.getElementById("ToolTables_evidence_table_2").className += " disabled";
  				document.getElementById("ToolTables_evidence_table_3").className += " disabled";
  				document.getElementById("ToolTables_evidence_table_4").className += " disabled";
  			}
  		});
  	}
  	
  	function set_up_overview_table(data) {
  		var r = data['gen_circle_size'];
  		var s = data['phys_circle_size'];
  		var x = data['circle_distance'];
  		var A = data['num_gen_interactors'];
  		var B = data['num_phys_interactors'];
  		var C = data['num_both_interactors'];
  			
		var stage = draw_venn_diagram("venn_diagram", r, s, x, A, B, C);
		stage.toDataURL({
       		width: 350,
        	height: 350,
        	callback: function(dataUrl) {
          		document.getElementById("save").href = dataUrl.replace("image/png", "image/octet-stream");
        	}
          });
			
    	if(r == 0) {
    		document.getElementById("phys_and_gen").disabled = true; 
    		document.getElementById("phys").disabled = true; 
    	}
    	if(s == 0) {
    		document.getElementById("phys_and_gen").disabled = true; 
    		document.getElementById("gen").disabled = true; 
    	}
    	if(x == r+s+1) {
    		document.getElementById("phys_and_gen").disabled = true; 
    	}
  	}
	
	$(document).ready(function() {
    	//Get overview data
  		$.getJSON("{{interaction_overview_link}}", set_up_overview_table);
	
		//Get evidence data
  		$.getJSON("{{interaction_details_link}}", set_up_evidence_table);
    	
    	//Get resources
	  	$.getJSON("{{interaction_resources_link}}", set_up_resources);
	});
</script>


<script>
	function analyze_phys_and_gen() {
		var list_name = '{{both_listname}}';
		var bioents = [];

		var gen_bioents = {};
		var ev_table = $.fn.dataTable.fnTables(true)[0];
		var data = $(ev_table).dataTable().fnGetData();
		for (var i=0,len=data.length; i<len; i++) { 
			var ev_type = data[i][3];
			if(ev_type == 'Genetic') {
				var name_with_link = data[i][2];
				var name = name_from_link(name_with_link);
				gen_bioents[name] = true;
			}
		}	

		for (var i=0,len=data.length; i<len; i++) { 
			var ev_type = data[i][3];
			if(ev_type == 'Physical') {
				var name_with_link = data[i][2];
				var name = name_from_link(name_with_link);
				if(name in gen_bioents) {
					bioents.push(name);
				}
			}

		}	
		analyze('{{analyze_link}}', list_name, bioents);
	}
	
	function analyze_phys() {
		var list_name = '{{physical_listname}}';
		var bioents = [];

		var ev_table = $.fn.dataTable.fnTables(true)[0];
		var data = $(ev_table).dataTable().fnGetData();
		for (var i=0,len=data.length; i<len; i++) { 
			var ev_type = data[i][3];
			if(ev_type == 'Physical') {
				var name_with_link = data[i][2];
				var name = name_from_link(name_with_link);
				bioents.push(name);
			}
		}	
		analyze('{{analyze_link}}', list_name, bioents);
	}
	
	function analyze_gen() {
		var list_name = '{{genetic_listname}}';
		var bioents = [];

		var ev_table = $.fn.dataTable.fnTables(true)[0];
		var data = $(ev_table).dataTable().fnGetData();
		for (var i=0,len=data.length; i<len; i++) { 
			var ev_type = data[i][3];
			if(ev_type == 'Genetic') {
				var name_with_link = data[i][2];
				var name = name_from_link(name_with_link);
				bioents.push(name);
			}
		}	
		analyze('{{analyze_link}}', list_name, bioents);
	}
	
	function analyze_phys_or_gen() {
		var list_name = '{{all_listname}}';
		var bioents = [];

		var ev_table = $.fn.dataTable.fnTables(true)[0];
		var data = $(ev_table).dataTable().fnGetData();
		for (var i=0,len=data.length; i<len; i++) { 
			var name_with_link = data[i][2];
			var name = name_from_link(name_with_link);
			bioents.push(name);
		}	
		analyze('{{analyze_link}}', list_name, bioents);
	}
	
</script>

<script src="cytoscape/cytoscape.min.js"></script>	
<script src="cytoscape/arbor.js"></script>	

<script>
var style = cytoscape.stylesheet()
	.selector('node')
	.css({
		'content': 'data(name)',
		'font-family': 'helvetica',
		'font-size': 14,
		'text-outline-width': 3,
		'text-outline-color': '#888',
		'text-valign': 'center',
		'color': '#fff',
		'width': 30,
		'height': 30,
		'border-color': '#fff'
	})
	.selector('edge')
	.css({
		'width': 2,
	})
	.selector("node[sub_type='FOCUS']")
	.css({
		'background-color': "#fade71",
		'text-outline-color': '#fff',
		'color': '#888',
	})
	.selector("edge[genetic > 0][physical = 0]")
	.css({
		'line-color': "#8181F7",
	})
	.selector("edge[physical > 0][genetic = 0]")
	.css({
		'line-color': "#F78181",
	})
	.selector("edge[genetic > 0][physical > 0]")
	.css({
		'line-color': "#240B3B",
	});


$.getJSON("{{interaction_graph_link}}", function(data) {
	var cy = setup_cytoscape_vis('cy', style, data);
	
	setup_slider("allSlider", data['min_evidence_cutoff'], Math.min(data['max_evidence_cutoff'], 10), Math.min(data['max_evidence_cutoff'], 3), filter_cy);
	setup_slider("physSlider", data['min_evidence_cutoff'], Math.min(data['max_phys_cutoff'], 10), Math.min(data['max_phys_cutoff'], 3), filter_cy);
	setup_slider("genSlider", data['min_evidence_cutoff'], Math.min(data['max_gen_cutoff'], 10), Math.min(data['max_gen_cutoff'], 3), filter_cy);
	setup_slider("bothSlider", data['min_evidence_cutoff'], Math.min(data['max_both_cutoff'], 10), Math.min(data['max_both_cutoff'], 3), filter_cy);
	
	document.getElementById("physSlider").style.display = 'none';
	document.getElementById("genSlider").style.display = 'none';
	document.getElementById("bothSlider").style.display = 'none';
	
	if(data['max_phys_cutoff'] == 0) {
		document.getElementById("physical_radio").disabled = true;
	}
	if(data['max_gen_cutoff'] == 0) {
		document.getElementById("genetic_radio").disabled = true;
	}
	if(data['max_both_cutoff'] == 0) {
		document.getElementById("both_radio").disabled = true;
	}
});

function change_scale() {
	var all = document.getElementById('all_radio').checked;
	var phys = document.getElementById('physical_radio').checked;
	var gen = document.getElementById('genetic_radio').checked;
	var both = document.getElementById('both_radio').checked;
	
	var prev_value;
	if(document.getElementById("allSlider").style.display == 'block') {
		prev_value = $("#allSlider").val();
	}
	else if(document.getElementById("physSlider").style.display == 'block') {
		prev_value = $("#physSlider").val();
	}
	else if(document.getElementById("genSlider").style.display == 'block') {
		prev_value = $("#genSlider").val();
	}
	else if(document.getElementById("bothSlider").style.display == 'block') {
		prev_value = $("#bothSlider").val();
	}
	
	if(all) {
		$("#allSlider").val(prev_value);
		document.getElementById("allSlider").style.display = 'block';
		document.getElementById("physSlider").style.display = 'none';
		document.getElementById("genSlider").style.display = 'none';
		document.getElementById("bothSlider").style.display = 'none';
	}
	else if(phys) {
		$("#physSlider").val(prev_value);
		document.getElementById("allSlider").style.display = 'none';
		document.getElementById("physSlider").style.display = 'block';
		document.getElementById("genSlider").style.display = 'none';
		document.getElementById("bothSlider").style.display = 'none';
	}
	else if(gen) {
		$("#genSlider").val(prev_value);
		document.getElementById("allSlider").style.display = 'none';
		document.getElementById("physSlider").style.display = 'none';
		document.getElementById("genSlider").style.display = 'block';
		document.getElementById("bothSlider").style.display = 'none';
	}
	else if(both) {
		$("#bothSlider").val(prev_value);
		document.getElementById("allSlider").style.display = 'none';
		document.getElementById("physSlider").style.display = 'none';
		document.getElementById("genSlider").style.display = 'none';
		document.getElementById("bothSlider").style.display = 'block';
	}
}

function filter_cy() {
	var all = document.getElementById('all_radio').checked;
	var phys = document.getElementById('physical_radio').checked;
	var gen = document.getElementById('genetic_radio').checked;
	var both = document.getElementById('both_radio').checked;
	
    if(all) {
    	var cutoff = $("#allSlider").val();
        cy.elements("node[evidence >= " + cutoff + "]").css({'visibility': 'visible',});
        cy.elements("edge[evidence >= " + cutoff + "]").css({'visibility': 'visible',});
        
        cy.elements("node[evidence < " + cutoff + "]").css({'visibility': 'hidden',});
        cy.elements("edge[evidence < " + cutoff + "]").css({'visibility': 'hidden',});
    }
    else if(phys) {
        var cutoff = $("#physSlider").val();
        cy.elements("node[physical >=  " + cutoff + "]").css({'visibility': 'visible',});
        cy.elements("edge[physical >=  " + cutoff + "]").css({'visibility': 'visible',});
        
        cy.elements("node[physical < " + cutoff + "]").css({'visibility': 'hidden',});
        cy.elements("edge[physical < " + cutoff + "]").css({'visibility': 'hidden',});
    }
    else if(gen) {
    	var cutoff = $("#genSlider").val();
        cy.elements("node[genetic >= " + cutoff + "]").css({'visibility': 'visible',});
        cy.elements("edge[genetic >= " + cutoff + "]").css({'visibility': 'visible',});
        
        cy.elements("node[genetic < " + cutoff + "]").css({'visibility': 'hidden',});
        cy.elements("edge[genetic < " + cutoff + "]").css({'visibility': 'hidden',});
    }
    else if(both) {
    	var cutoff = $("#bothSlider").val();
        cy.elements("node[physical >= " + cutoff + "][genetic >= " + cutoff + "]").css({'visibility': 'visible',});
        cy.elements("edge[physical >= " + cutoff + "][genetic >= " + cutoff + "]").css({'visibility': 'visible',});
        
        cy.elements("node[physical < " + cutoff + "]").css({'visibility': 'hidden',});
        cy.elements("edge[physical < " + cutoff + "]").css({'visibility': 'hidden',});
        
        cy.elements("node[genetic < " + cutoff + "]").css({'visibility': 'hidden',});
        cy.elements("edge[genetic < " + cutoff + "]").css({'visibility': 'hidden',});
    }
}
</script>
        

{% endblock body %}

<!-- Le javascript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="../../static/js/cytoscape/cxtmenu.js"></script>	
<script src="../../static/js/cytoscape/cytoscape-edgehandles.min.js"></script>	
<script src="../../static/js/cytoscape/cytoscape-panzoom.min.js"></script>	
<script src="../../static/js/cytoscape/cytoscape-panzoom.css"></script>	

