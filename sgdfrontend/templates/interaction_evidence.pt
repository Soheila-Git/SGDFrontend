<div metal:use-macro="layout">
  <div metal:fill-slot="content">


<body>
	
<!-- Subhead
================================================== -->
<header class="jumbotron subhead" id="overview">
	<div class="container">
		<h1><span tal:content="display_name"></h1>
		<p class="lead">
			<span tal:content="structure description"></span>
		</p>
	</div>
</header>

<div class="container-fluid">


<!-- Docs nav
================================================== -->
<div class="row-fluid">
	
	<div class="span12">  


<!-- Genetic Evidence
================================================== -->
<section id="evidence">
	<div class="page-header">
		<h1>Interactions <span id='evidence_header'></h1>
		<span>Source: <a href="http://thebiogrid.org/" target="_blank">BioGRID</a></span>
		
		<h3>Genetic Interactions <span id='genetic_evidence_header'></h3>
		<span id='genetic_evidence_message'></span>
		<div id='genetic_evidence_wrapper'>
			<table class='table table-striped table-bordered table-condensed tablesorter' id='genetic_evidence_table' width="100%">
			<thead>
  			<tr>
  				<th></th>
  				<th>Interactor</th>
  				<th>Interactor</th>
    			<th>Experiment</th>
    			<th>Annotation</th>
    			<th>Action</th>
    			<th>Phenotype</th>
    			<th>Modification</th>
    			<th>Source</th>
    			<th>Reference</th>
    			<th>Note</th>
  			</tr>
  			</thead>
			</table>
        </div>
        <br></br>
		
		<h3>Physical Interactions <span id='physical_evidence_header'></h3>

		<span id='physical_evidence_message'></span>
		<div id='physical_evidence_wrapper'>
			<table class='table table-striped table-bordered table-condensed tablesorter' id='physical_evidence_table' width="100%">
			<thead>
  			<tr>
  				<th></th>
  				<th>Interactor</th>
  				<th>Interactor</th>
    			<th>Experiment</th>
    			<th>Annotation</th>
    			<th>Action</th>
    			<th>Phenotype</th>
    			<th>Modification</th>
    			<th>Source</th>
    			<th>Reference</th>
    			<th>Note</th>
  			</tr>
  			</thead>
			</table>
        </div>
		
	</div>
</section>

<!-- Network Visualization
================================================== -->
<section id='network'>
	<div class="page-header">
		<h1>Network Visualization</h1>
		<strong>Filter Interactions by # Total Evidence:</strong>
		<br></br>
		<div id="slider-range-min"></div>
		<br></br>
		<div id="cytoscapeweb">
            Network visualization is loading...
        </div>
        <span>Export:</span>
        <div class="btn-group">
        	<a class="btn" onclick="vis.exportNetwork('png', '/download_graph/png')">png</a>
        	<a class="btn" onclick="vis.exportNetwork('svg', '/download_graph/svg')">svg</a>
        	<a class="btn" onclick="vis.exportNetwork('pdf', '/download_graph/pdf')">pdf</a>
        	<a class="btn" onclick="vis.exportNetwork('xgmml', '/download_graph/xml')">xgmml</a>
        	<a class="btn" onclick="vis.exportNetwork('graphml', '/download_graph/txt')">graphml</a>
        	<a class="btn" onclick="vis.exportNetwork('sif', '/download_graph/txt', options={nodeAttr:'label', interactionAttr:'label'})">txt</a>
        </div>
    </div>
</section>

<!-- Resources
================================================== -->
<section id="resources">
	<div class="page-header">
		<h1>Resources</h1>
		<ul id='resource_list'>
		</ul>
	</div>
</section>

<!-- References
================================================== -->
<section id="references">
	<div class="page-header">
		<h1>References</h1>
		<ul id='reference_list'>
		</ul>
	</div>
</section>

<script>
	$(document).ready(function() {
		//Get resources
	  	$.getJSON("${resource_link}", function(data) {
			resource_list = document.getElementById("resource_list");
			for (var i=0; i < data.length; i++) {
				var r = data[i];
				var span=document.createElement('span');
				span.innerHTML = r + ' | ';
				resource_list.appendChild(span);
			}
  		});
	
		//Get evidence data
		
  		$.getJSON("${interaction_evidence_table_link}", function(data) {
			var genetic_evidence_table = data['genetic'];
  			var physical_evidence_table = data['physical'];
  			var references = data['reference'];
  			
  			//Set total evidence count
			var num_rows = genetic_evidence_table.length + physical_evidence_table.length;
			document.getElementById("evidence_header").innerHTML = '(' + num_rows + ')';
			
			//Insert a 'details' column to the table
			var nCloneTh = document.createElement( 'th' );
   			var nCloneTd = document.createElement( 'td' );
    		nCloneTd.className = "center";
    		var b = document.createElement('button');
    		b.className = 'btn btn-link';
    		b.innerHTML = '<i class="icon-plus-sign"></i>';
         	nCloneTd.appendChild(b);
			

    		
    		$('#genetic_evidence_table tbody tr').each( function () {
    		   this.insertBefore(  nCloneTd.cloneNode( true ), this.childNodes[0] );
				
   			} );
    		
      		$('#physical_evidence_table tbody tr').each( function () {
       	 		this.insertBefore( nCloneTh.cloneNode(true), this.childNodes[0] );
     
    		} );
			
  			//Set up genetic evidence table
			var options = basic_datatable_options("genetic_evidence_header", 
				'${genetic_interaction_evidence_filename}', "genetic_evidence_wrapper", "genetic_evidence_message");
			options["bPaginate"] = true;
			options["aaData"] = genetic_evidence_table;
			options["aaSorting"] = [[2, "asc"]];
			options["aoColumns"] = [{"bSortable":false}, {"bSearchable":false, "bVisible":false}, null, null, null, null, null, {"bSearchable":false, "bVisible":false}, {"bSearchable":false, "bVisible":false}, null, {"bSearchable":false, "bVisible":false}]
  			options["fnDrawCallback"] = function(oSettings) {
  				var table = this;
  				this.$('tr').each( function () {
  					if(table.fnGetData(this)[10] != null) {
    		    		this.removeChild(this.childNodes[0]);
    		    		this.insertBefore(nCloneTd.cloneNode( true ), this.childNodes[0]);
    		    	}
   				});
   				this.$('button').click( function () {
  					var nTr = $(this).parents('tr')[0];

        			if ( table.fnIsOpen(nTr) ) {
            			// This row is already open - close it
            	 		this.innerHTML = '<i class="icon-plus-sign"></i>';
            			table.fnClose( nTr );
        			}
        			else {
            			// Open this row
            			this.innerHTML = '<i class="icon-minus-sign"></i>';
            			var description = '<strong>Note:</strong> ' + table.fnGetData(nTr)[10] + '<br>';
            			table.fnOpen( nTr, description, 'details' );
        			}
   				});
  			};
  			if('${hide_interactor}') {
  			  	options["aoColumns"][2] = {"bSearchable":false, "bVisible":false}
    		}
  			$('#genetic_evidence_table').dataTable(options);
  			
  			//Set up physical evidence data
			var options = basic_datatable_options("physical_evidence_header", 
				'${physical_interaction_evidence_filename}', "physical_evidence_wrapper", "physical_evidence_message");
			options["bPaginate"] = true;
			options["aaData"] = physical_evidence_table;
			options["aaSorting"] = [[2, "asc"]];
			options["aoColumns"] = [{"bSortable":false}, {"bSearchable":false, "bVisible":false}, null, null, null, null, {"bSearchable":false, "bVisible":false}, null, {"bSearchable":false, "bVisible":false}, null, {"bSearchable":false, "bVisible":false}]
  			options["fnDrawCallback"] = function(oSettings) {
  				var table = this;
  				this.$('tr').each( function () {
  					if(table.fnGetData(this)[10] != null) {
    		    		this.removeChild(this.childNodes[0]);
    		    		this.insertBefore(nCloneTd.cloneNode( true ), this.childNodes[0]);
    		    	}
   				});
   				this.$('button').click( function () {
  					var nTr = $(this).parents('tr')[0];

        			if ( table.fnIsOpen(nTr) ) {
            			// This row is already open - close it
            	 		this.innerHTML = '<i class="icon-plus-sign"></i>';
            			table.fnClose( nTr );
        			}
        			else {
            			// Open this row
            			this.innerHTML = '<i class="icon-minus-sign"></i>';
            			var description = '<strong>Note:</strong> ' + table.fnGetData(nTr)[10] + '<br>';
            			table.fnOpen( nTr, description, 'details' );
        			}
   				});
  			};
  			if('${hide_interactor}') {
  			  	options["aoColumns"][2] = {"bSearchable":false, "bVisible":false}
    		}
  			$('#physical_evidence_table').dataTable(options);
  			
			
			//Set up references
			ref_list = document.getElementById("reference_list");
			for (var i=0; i < references.length; i++) {
				var citation = references[i];
				var p=document.createElement('p');
				p.innerHTML = citation;
				ref_list.appendChild(p);
			}
 
  		});
	} );
</script>

<script>
	var vis = null;
	window.onload=function() {
		vis = setup_interaction_cytoscape_vis("${interaction_graph_link}");   
	};           
</script>
        
<style>
	/* The Cytoscape Web container must have its dimensions set. */
	html, body { height: 80%; width: 100%; padding: 0; margin: 0; }
	#cytoscapeweb { width: 100%; height: 100%; }
</style>

</div>

</body>
</div>
</div>

